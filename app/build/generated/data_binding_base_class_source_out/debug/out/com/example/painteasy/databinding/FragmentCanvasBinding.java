// Generated by data binding compiler. Do not edit!
package com.example.painteasy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.painteasy.R;
import com.example.painteasy.ui.canvas.CanvasFragment;
import com.example.painteasy.ui.canvas.DrawingView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentCanvasBinding extends ViewDataBinding {
  @NonNull
  public final CardView cvToolsPanel;

  @NonNull
  public final DrawingView drawingView;

  @NonNull
  public final FrameLayout flDrawingViewContainer;

  @NonNull
  public final HorizontalScrollView hsvRight;

  @NonNull
  public final ImageButton ibBackgroundImage;

  @NonNull
  public final ImageButton ibBrushColor;

  @NonNull
  public final ImageButton ibBrushSize;

  @NonNull
  public final ImageButton ibClearCanvas;

  @NonNull
  public final ImageButton ibEraseDraw;

  @NonNull
  public final ImageButton ibMoveLeft;

  @NonNull
  public final ImageButton ibMoveRight;

  @NonNull
  public final ImageButton ibRedoDraw;

  @NonNull
  public final ImageButton ibShareDrawing;

  @NonNull
  public final ImageButton ibUndoDraw;

  @NonNull
  public final ImageView ivBackground;

  @Bindable
  protected CanvasFragment mCanvas;

  @Bindable
  protected DrawingView mDrawing;

  protected FragmentCanvasBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cvToolsPanel, DrawingView drawingView, FrameLayout flDrawingViewContainer,
      HorizontalScrollView hsvRight, ImageButton ibBackgroundImage, ImageButton ibBrushColor,
      ImageButton ibBrushSize, ImageButton ibClearCanvas, ImageButton ibEraseDraw,
      ImageButton ibMoveLeft, ImageButton ibMoveRight, ImageButton ibRedoDraw,
      ImageButton ibShareDrawing, ImageButton ibUndoDraw, ImageView ivBackground) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cvToolsPanel = cvToolsPanel;
    this.drawingView = drawingView;
    this.flDrawingViewContainer = flDrawingViewContainer;
    this.hsvRight = hsvRight;
    this.ibBackgroundImage = ibBackgroundImage;
    this.ibBrushColor = ibBrushColor;
    this.ibBrushSize = ibBrushSize;
    this.ibClearCanvas = ibClearCanvas;
    this.ibEraseDraw = ibEraseDraw;
    this.ibMoveLeft = ibMoveLeft;
    this.ibMoveRight = ibMoveRight;
    this.ibRedoDraw = ibRedoDraw;
    this.ibShareDrawing = ibShareDrawing;
    this.ibUndoDraw = ibUndoDraw;
    this.ivBackground = ivBackground;
  }

  public abstract void setCanvas(@Nullable CanvasFragment canvas);

  @Nullable
  public CanvasFragment getCanvas() {
    return mCanvas;
  }

  public abstract void setDrawing(@Nullable DrawingView drawing);

  @Nullable
  public DrawingView getDrawing() {
    return mDrawing;
  }

  @NonNull
  public static FragmentCanvasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_canvas, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCanvasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentCanvasBinding>inflateInternal(inflater, R.layout.fragment_canvas, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentCanvasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_canvas, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCanvasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentCanvasBinding>inflateInternal(inflater, R.layout.fragment_canvas, null, false, component);
  }

  public static FragmentCanvasBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentCanvasBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentCanvasBinding)bind(component, view, R.layout.fragment_canvas);
  }
}
